<beans:beans
	xmlns="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xsi:schemaLocation="http://www.springframework.org/schema/security
		http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/mvc
		http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd">
		
	
	<beans:bean id="passwordEncoder"
		class="org.springframework.security.crypto.password.NoOpPasswordEncoder" />
		
	<http auto-config="true" >
		<intercept-url pattern="/" access="anonymous" />
		<intercept-url pattern="/adminindex"
			access="hasAuthority('admin')" />
		<form-login login-page="/adminsignin" login-processing-url="/adminloginprocess"
			default-target-url="/adminindex"  username-parameter="email"
			password-parameter="password" />
		<csrf disabled="true" />
		
	</http>
	
	<authentication-manager>
		<authentication-provider>
			<password-encoder ref="passwordEncoder"></password-encoder>
			<jdbc-user-service data-source-ref="dataSource"
				users-by-username-query="select email,password,status  from  adminperson where email=?"
				authorities-by-username-query="select email,role from  adminperson where email=?" />
		</authentication-provider>

	</authentication-manager>
	
	
</beans:beans>